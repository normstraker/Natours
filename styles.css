/* Selector {Declaration block
(Property: Declared value;)-Declaration} */

/* Specificity - (!important - in Declared value, has highest specificity - bad practice to use) -- inline(HTML), id's, classes, elements (0,0,0,0) 
universal selector (*) has no specificity value */

/* Stylesheet order matters in HTML - put your styles.css last */

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* better practice - box-sizing: border-box; in body element with inherit here */
  box-sizing: inherit;
}

html {
  /* if we hard code a px value the user cannot change the size from their browser */
  /* based on 10px so 10/16 = .625 */
  font-size: 62.5%;
}

:root {
  --light-green: #7ed56f;
  --medium-green: #55c57a;
  --dark-green: #28b485;
  --grey-777: #777;
  --white: #fff;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: var(--grey-777);
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(./images/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.logo {
  height: 3.5rem;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: var(--white);
  text-transform: uppercase;
  padding-left: 3.5rem;
  margin-bottom: 6rem;
}

.heading-primary-main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation: moveInLeft 1s ease-out;
  /* animation: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out; */
  backface-visibility: hidden;
}

.heading-primary-sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;
  animation: moveInRight 1.5s ease-out;
  /* animation: moveInRight;
  animation-duration: 1.5s;
  animation-timing-function: ease-out; */
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-15rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(15rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  /* 80% {
    transform: translateY(-1rem);
  } */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  /* top and bottom margins are respected */
  display: inline-block;
  /* text-align:center propery on initial state */
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
}

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.3s backwards;
  /* @keyframes applied before animation starts */
  /* animation-fill-mode: backwards; */
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  /* position relative to .btn state */
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: var(--white);
  color: var(--grey-777);
}

.btn::after {
  /* must have content and display for ::after */
  content: "";
  display: inline-block;
  /* acts like child of .btn */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background-color: var(--white);
}

.btn:hover::after {
  /* transition must be on original state - .btn::after */
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
